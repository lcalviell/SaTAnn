list_reads_tc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="T>C")>0]
list_reads_none<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="None")>0]
list_reads_notc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion!="T>C")>0 & sum(res_mut_rl$reads$conversion=="T>C")==0 & sum(res_mut_rl$reads$conversion=="None")==0]
list_par_rRNA_znf$T_C<-as.vector(coverage(list_reads_tc,weight = list_reads_tc$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA_znf$None<-as.vector(coverage(list_reads_none,weight = list_reads_none$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA_znf$Other<-as.vector(coverage(list_reads_notc,weight = list_reads_notc$score)[[1]][minpos_rdna:maxpos_rdna])
par2<-melt(list_par_rRNA_znf)
par1$replicate<-"ZNF598 replicate_1"
par2$replicate<-"ZNF598 replicate_2"
par1
parna<-rbind(par1,par2)
head(par1)
parna<-rbind(par1,par2)
parna$position<-rep(minpos_rdna:maxpos_rdna,length(table(par1$L1))+length(table(par2$L1)))
maxxa<-max(parna$value)
parna<-parna[parna$L1!="all_reads",]
parna$mutation<-parna$L1
table(parna$mutation)
parna$mutation<-factor(parna$mutation,levels=c("None","Other","T>C"))
colrna<-c("grey","orange","navyblue")
pos_18s<-c(3657,5527)
pos_5s<-c(6623,6779)
pos_28s<-c(7935,12969)
parnagg<-aggregate(parna$value,by=list(parna$position,parna$replicate),sum)
colnames(parnagg)<-c("position","replicate","value")
parnagg_id<-paste(parnagg$position,parnagg$replicate,sep="_")
parnaid<-paste(parna$position,parna$replicate,sep="_")
parna$norm_value<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parna$norm_value_rep<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parrnapl_reps<-ggplot(parna,aes(x=position,y=value,fill=mutation)) + geom_bar(stat="identity",width=1) +
facet_wrap(replicate~.,nrow = 2) +
ylab("Read coverage") +
xlab("") +
annotate("rect",xmin = pos_18s[1],xmax = pos_18s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_5s[1],xmax = pos_5s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_28s[1],xmax = pos_28s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
scale_fill_manual(values = colrna,"Mutations") +
theme_classic() +
theme(axis.title.x = element_text(size=18),axis.text.x  = element_text(angle=0, vjust=0.5, size=18)) +
theme(axis.title.y = element_text(size=15),axis.text.y  = element_text(angle=0, vjust=0.5, size=15))  +
theme(strip.text.x = element_text(size=10, face="bold"),strip.text.y = element_text(size=24),strip.background = element_rect(colour="black", fill="white"))  +
scale_x_continuous(breaks=c(pos_18s[1],(pos_18s[1]+pos_18s[2])/2,pos_18s[2],pos_5s[1],(pos_5s[1]+pos_5s[2])/2,pos_5s[2],pos_28s[1],(pos_28s[1]+pos_28s[2])/2,pos_28s[2]), labels=c("","18S","","","5.8S","","","28S",""))
parrnapl_reps
parna<-rbind(par1,par2)
parna$position<-rep(minpos_rdna:maxpos_rdna,length(table(par1$L1))+length(table(par2$L1)))
maxxa<-max(parna$value)
parna<-parna[parna$L1!="all_reads",]
parna$mutation<-parna$L1
parna$mutation<-factor(parna$mutation,levels=c("None","Other","T_C"))
colrna<-c("grey","orange","navyblue")
pos_18s<-c(3657,5527)
pos_5s<-c(6623,6779)
pos_28s<-c(7935,12969)
parnagg<-aggregate(parna$value,by=list(parna$position,parna$replicate),sum)
colnames(parnagg)<-c("position","replicate","value")
parnagg_id<-paste(parnagg$position,parnagg$replicate,sep="_")
parnaid<-paste(parna$position,parna$replicate,sep="_")
parna$norm_value<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parna$norm_value_rep<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parrnapl_reps<-ggplot(parna,aes(x=position,y=value,fill=mutation)) + geom_bar(stat="identity",width=1) +
facet_wrap(replicate~.,nrow = 2) +
ylab("Read coverage") +
xlab("") +
annotate("rect",xmin = pos_18s[1],xmax = pos_18s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_5s[1],xmax = pos_5s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_28s[1],xmax = pos_28s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
scale_fill_manual(values = colrna,"Mutations") +
theme_classic() +
theme(axis.title.x = element_text(size=18),axis.text.x  = element_text(angle=0, vjust=0.5, size=18)) +
theme(axis.title.y = element_text(size=15),axis.text.y  = element_text(angle=0, vjust=0.5, size=15))  +
theme(strip.text.x = element_text(size=10, face="bold"),strip.text.y = element_text(size=24),strip.background = element_rect(colour="black", fill="white"))  +
scale_x_continuous(breaks=c(pos_18s[1],(pos_18s[1]+pos_18s[2])/2,pos_18s[2],pos_5s[1],(pos_5s[1]+pos_5s[2])/2,pos_5s[2],pos_28s[1],(pos_28s[1]+pos_28s[2])/2,pos_28s[2]), labels=c("","18S","","","5.8S","","","28S",""))
parrnapl_reps
list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot)
prot<-"DICER"
list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot)
fls<-list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot)
fls
fls<-list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot,full.names = T)
fls
fls<-fls[grep(fls,pattern = "rRNA_bowtie.bam_mut_rl_Robj")]
fls
nms<-basename(fls)
nms
nms<-gsub(basename(fls),pattern = "_rRNA_bowtie.bam_mut_rl_Robj",replacement = "")
nms
prot<-"DICER"
fls<-list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot,full.names = T)
fls<-fls[grep(fls,pattern = "rRNA_bowtie.bam_mut_rl_Robj")]
nms<-gsub(basename(fls),pattern = "_rRNA_bowtie.bam_mut_rl_Robj",replacement = "")
list_pars<-list()
list_pars<-list()
for(i in 1:length(fls)){
load(fls[i])
list_par_rRNA<-list()
list_reads_tc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="T>C")>0]
list_reads_none<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="None")>0]
list_reads_notc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion!="T>C")>0 & sum(res_mut_rl$reads$conversion=="T>C")==0 & sum(res_mut_rl$reads$conversion=="None")==0]
list_par_rRNA$T_C<-as.vector(coverage(list_reads_tc,weight = list_reads_tc$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA$None<-as.vector(coverage(list_reads_none,weight = list_reads_none$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA$Other<-as.vector(coverage(list_reads_notc,weight = list_reads_notc$score)[[1]][minpos_rdna:maxpos_rdna])
parr<-melt(list_par_rRNA)
parr$position<-rep(minpos_rdna:maxpos_rdna,length(table(parr$L1)))
parr$replicate<-nms[i]
list_pars[[i]]<-parr
}
list_pars
list_pars<-do.call(args = list_pars,what = rbind.data.frame)
head(list_pars)
parna<-do.call(args = list_pars,what = rbind.data.frame)
library("GenomicFeatures")
library("GenomicAlignments")
library("GenomicFeatures")
library("rtracklayer")
library(ggplot2)
library("gplots")
library("reshape2")
minpos_rdna<-3000
maxpos_rdna<-13000
prot<-"DICER"
fls<-list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot,full.names = T)
fls<-fls[grep(fls,pattern = "rRNA_bowtie.bam_mut_rl_Robj")]
nms<-gsub(basename(fls),pattern = "_rRNA_bowtie.bam_mut_rl_Robj",replacement = "")
list_pars<-list()
for(i in 1:length(fls)){
load(fls[i])
list_par_rRNA<-list()
list_reads_tc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="T>C")>0]
list_reads_none<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="None")>0]
list_reads_notc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion!="T>C")>0 & sum(res_mut_rl$reads$conversion=="T>C")==0 & sum(res_mut_rl$reads$conversion=="None")==0]
list_par_rRNA$T_C<-as.vector(coverage(list_reads_tc,weight = list_reads_tc$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA$None<-as.vector(coverage(list_reads_none,weight = list_reads_none$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA$Other<-as.vector(coverage(list_reads_notc,weight = list_reads_notc$score)[[1]][minpos_rdna:maxpos_rdna])
parr<-melt(list_par_rRNA)
parr$position<-rep(minpos_rdna:maxpos_rdna,length(table(parr$L1)))
parr$replicate<-nms[i]
list_pars[[i]]<-parr
}
parna<-do.call(args = list_pars,what = rbind.data.frame)
maxxa<-max(parna$value)
parna<-parna[parna$L1!="all_reads",]
parna$mutation<-parna$L1
parna$mutation<-factor(parna$mutation,levels=c("None","Other","T_C"))
colrna<-c("grey","orange","navyblue")
pos_18s<-c(3657,5527)
pos_5s<-c(6623,6779)
pos_28s<-c(7935,12969)
parnagg<-aggregate(parna$value,by=list(parna$position,parna$replicate),sum)
colnames(parnagg)<-c("position","replicate","value")
parnagg_id<-paste(parnagg$position,parnagg$replicate,sep="_")
parnaid<-paste(parna$position,parna$replicate,sep="_")
parna$norm_value<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parna$norm_value_rep<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parrnapl_reps<-ggplot(parna,aes(x=position,y=value,fill=mutation)) + geom_bar(stat="identity",width=1) +
facet_wrap(replicate~.,nrow = 2) +
ylab("Read coverage") +
xlab("") +
annotate("rect",xmin = pos_18s[1],xmax = pos_18s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_5s[1],xmax = pos_5s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_28s[1],xmax = pos_28s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
scale_fill_manual(values = colrna,"Mutations") +
theme_classic() +
theme(axis.title.x = element_text(size=18),axis.text.x  = element_text(angle=0, vjust=0.5, size=18)) +
theme(axis.title.y = element_text(size=15),axis.text.y  = element_text(angle=0, vjust=0.5, size=15))  +
theme(strip.text.x = element_text(size=10, face="bold"),strip.text.y = element_text(size=24),strip.background = element_rect(colour="black", fill="white"))  +
scale_x_continuous(breaks=c(pos_18s[1],(pos_18s[1]+pos_18s[2])/2,pos_18s[2],pos_5s[1],(pos_5s[1]+pos_5s[2])/2,pos_5s[2],pos_28s[1],(pos_28s[1]+pos_28s[2])/2,pos_28s[2]), labels=c("","18S","","","5.8S","","","28S",""))
parrnapl_reps
parrnapl_reps<-ggplot(parna,aes(x=position,y=value,fill=mutation)) + geom_bar(stat="identity",width=1) +
facet_wrap(replicate~.,ncol = 1,scales = "free") +
ylab("Read coverage") +
xlab("") +
annotate("rect",xmin = pos_18s[1],xmax = pos_18s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_5s[1],xmax = pos_5s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_28s[1],xmax = pos_28s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
scale_fill_manual(values = colrna,"Mutations") +
theme_classic() +
theme(axis.title.x = element_text(size=18),axis.text.x  = element_text(angle=0, vjust=0.5, size=18)) +
theme(axis.title.y = element_text(size=15),axis.text.y  = element_text(angle=0, vjust=0.5, size=15))  +
theme(strip.text.x = element_text(size=10, face="bold"),strip.text.y = element_text(size=24),strip.background = element_rect(colour="black", fill="white"))  +
scale_x_continuous(breaks=c(pos_18s[1],(pos_18s[1]+pos_18s[2])/2,pos_18s[2],pos_5s[1],(pos_5s[1]+pos_5s[2])/2,pos_5s[2],pos_28s[1],(pos_28s[1]+pos_28s[2])/2,pos_28s[2]), labels=c("","18S","","","5.8S","","","28S",""))
parrnapl_reps
fls
prot<-"DICER"
fls<-list.files(path = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/TC_conv_objs/",pattern = prot,full.names = T)
fls<-fls[grep(fls,pattern = "rRNA_bowtie.bam_mut_rl_Robj")]
fls<-fls[1:2]
nms<-gsub(basename(fls),pattern = "_rRNA_bowtie.bam_mut_rl_Robj",replacement = "")
list_pars<-list()
for(i in 1:length(fls)){
load(fls[i])
list_par_rRNA<-list()
list_reads_tc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="T>C")>0]
list_reads_none<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion=="None")>0]
list_reads_notc<-res_mut_rl$reads[sum(res_mut_rl$reads$conversion!="T>C")>0 & sum(res_mut_rl$reads$conversion=="T>C")==0 & sum(res_mut_rl$reads$conversion=="None")==0]
list_par_rRNA$T_C<-as.vector(coverage(list_reads_tc,weight = list_reads_tc$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA$None<-as.vector(coverage(list_reads_none,weight = list_reads_none$score)[[1]][minpos_rdna:maxpos_rdna])
list_par_rRNA$Other<-as.vector(coverage(list_reads_notc,weight = list_reads_notc$score)[[1]][minpos_rdna:maxpos_rdna])
parr<-melt(list_par_rRNA)
parr$position<-rep(minpos_rdna:maxpos_rdna,length(table(parr$L1)))
parr$replicate<-nms[i]
list_pars[[i]]<-parr
}
parna<-do.call(args = list_pars,what = rbind.data.frame)
maxxa<-max(parna$value)
parna<-parna[parna$L1!="all_reads",]
parna$mutation<-parna$L1
parna$mutation<-factor(parna$mutation,levels=c("None","Other","T_C"))
colrna<-c("grey","orange","navyblue")
pos_18s<-c(3657,5527)
pos_5s<-c(6623,6779)
pos_28s<-c(7935,12969)
parnagg<-aggregate(parna$value,by=list(parna$position,parna$replicate),sum)
colnames(parnagg)<-c("position","replicate","value")
parnagg_id<-paste(parnagg$position,parnagg$replicate,sep="_")
parnaid<-paste(parna$position,parna$replicate,sep="_")
parna$norm_value<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parna$norm_value_rep<-parna$value/parnagg$value[match(parnaid,parnagg_id)]
parrnapl_reps<-ggplot(parna,aes(x=position,y=value,fill=mutation)) + geom_bar(stat="identity",width=1) +
facet_wrap(replicate~.,ncol = 1,scales = "free") +
ylab("Read coverage") +
xlab("") +
annotate("rect",xmin = pos_18s[1],xmax = pos_18s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_5s[1],xmax = pos_5s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
annotate("rect",xmin = pos_28s[1],xmax = pos_28s[2],ymin = 0,ymax=Inf,color=alpha("black",.5),alpha=0,lty=2) +
scale_fill_manual(values = colrna,"Mutations") +
theme_classic() +
theme(axis.title.x = element_text(size=18),axis.text.x  = element_text(angle=0, vjust=0.5, size=18)) +
theme(axis.title.y = element_text(size=15),axis.text.y  = element_text(angle=0, vjust=0.5, size=15))  +
theme(strip.text.x = element_text(size=10, face="bold"),strip.text.y = element_text(size=24),strip.background = element_rect(colour="black", fill="white"))  +
scale_x_continuous(breaks=c(pos_18s[1],(pos_18s[1]+pos_18s[2])/2,pos_18s[2],pos_5s[1],(pos_5s[1]+pos_5s[2])/2,pos_5s[2],pos_28s[1],(pos_28s[1]+pos_28s[2])/2,pos_28s[2]), labels=c("","18S","","","5.8S","","","28S",""))
parrnapl_reps
pdf(file = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/DICER_rRNA.pdf",width = 8,height = 5)
print(parrnapl_reps)
dev.off()
parrnapl_reps<-ggplot(parna,aes(x=position,y=value,fill=mutation)) + geom_bar(stat="identity",width=1) +
facet_wrap(replicate~.,ncol = 1,scales = "free") +
ylab("Read coverage") +
xlab("") +
annotate("rect",xmin = pos_18s[1],xmax = pos_18s[2],ymin = 0,ymax=Inf,color=alpha("black",.2),alpha=0,lty=2) +
annotate("rect",xmin = pos_5s[1],xmax = pos_5s[2],ymin = 0,ymax=Inf,color=alpha("black",.2),alpha=0,lty=2) +
annotate("rect",xmin = pos_28s[1],xmax = pos_28s[2],ymin = 0,ymax=Inf,color=alpha("black",.2),alpha=0,lty=2) +
scale_fill_manual(values = colrna,"Mutations") +
theme_classic() +
theme(axis.title.x = element_text(size=18),axis.text.x  = element_text(angle=0, vjust=0.5, size=18)) +
theme(axis.title.y = element_text(size=15),axis.text.y  = element_text(angle=0, vjust=0.5, size=15))  +
theme(strip.text.x = element_text(size=10, face="bold"),strip.text.y = element_text(size=24),strip.background = element_rect(colour="black", fill="white"))  +
scale_x_continuous(breaks=c(pos_18s[1],(pos_18s[1]+pos_18s[2])/2,pos_18s[2],pos_5s[1],(pos_5s[1]+pos_5s[2])/2,pos_5s[2],pos_28s[1],(pos_28s[1]+pos_28s[2])/2,pos_28s[2]), labels=c("","18S","","","5.8S","","","28S",""))
pdf(file = "/bfd/lcalviel/data/manyclips/results/human/all_TCs/DICER_rRNA.pdf",width = 8,height = 4)
print(parrnapl_reps)
dev.off()
fls1<-fls[grep(fls,pattern = "Ribo")]
fls<-list.files(path = "data/SaTAnn/new_wynt_fromfastq/results/",pattern = "SaTAnn",all.files = T,full.names = T,recursive = T)
fls
fls<-list.files(path = "data/SaTAnn/new_wynt_fromfastq/results/",pattern = "for_SaTAnn",all.files = T,full.names = T,recursive = T)
fls
nms<-gsub(basename(fls),pattern = "_Aligned.sortedByCoord.out.bam_for_SaTAnn",replacement = "")
nms
i==1
i=1
if(i==1){poolall<-get(load(fls[i]))}
poolall
if(i!=1){poolx<-get(load(fls[i]))}
poolx<-get(load(fls[i]))
names(poolall)
poolall["P_sites_all"]]<-c(poolall["P_sites_all"]],poolx["P_sites_all"]])
poolx<-get(load(fls[i]))
poolall["P_sites_all"]]<-c(poolall["P_sites_all"]],poolx["P_sites_all"]])
for(i in 1:length(fls)){
if(i==1){poolall<-get(load(fls[i]))}
if(i!=1){
poolx<-get(load(fls[i]))
poolall[["P_sites_all"]]<-c(poolall[["P_sites_all"]],poolx["P_sites_all"]])
poolall[["P_sites_uniq"]]<-c(poolall[["P_sites_uniq"]],poolx[["P_sites_uniq"]])
poolall[["P_sites_uniq_mm"]]<-c(poolall[["P_sites_uniq_mm"]],poolx[["P_sites_uniq_mm"]])
poolall[["junctions"]]$reads<-poolall[["junctions"]]$reads+poolx[["junctions"]]$reads
poolall[["junctions"]]$unique_reads<-poolall[["junctions"]]$unique_reads+poolx[["junctions"]]$unique_reads
}
}
poolx<-get(load(fls[i]))
poolall[["P_sites_all"]]<-c(poolall[["P_sites_all"]],poolx["P_sites_all"]])
for(i in 1:length(fls)){
if(i==1){poolall<-get(load(fls[i]))}
if(i!=1){
poolx<-get(load(fls[i]))
poolall[["P_sites_all"]]<-c(poolall[["P_sites_all"]],poolx[["P_sites_all"]])
poolall[["P_sites_uniq"]]<-c(poolall[["P_sites_uniq"]],poolx[["P_sites_uniq"]])
poolall[["P_sites_uniq_mm"]]<-c(poolall[["P_sites_uniq_mm"]],poolx[["P_sites_uniq_mm"]])
poolall[["junctions"]]$reads<-poolall[["junctions"]]$reads+poolx[["junctions"]]$reads
poolall[["junctions"]]$unique_reads<-poolall[["junctions"]]$unique_reads+poolx[["junctions"]]$unique_reads
}
}
poolall
poolall[["junctions"]]
GRanges(poolall[["junctions"]])
poolall[["junctions"]]@ranges
identical(poolall[["junctions"]]@ranges,poolx[["junctions"]]@ranges)
poolall[["P_sites_all"]]
poolall[["P_sites_all"]][strand(poolall[["P_sites_all"]])=="+"]
psall_pl<-coverage(poolall[["P_sites_all"]][strand(poolall[["P_sites_all"]])=="+"],weight = poolall[["P_sites_all"]][strand(poolall[["P_sites_all"]])=="+"]$score)
psall_pl
poolall[["P_sites_all"]]
psall_pl<-GRanges(psall_pl)
psall_pl
psall_pl<-psall_pl[psall_pl$score>0]
strand(psall_pl)<-"+"
psall_pl
poolall$P_sites_all
names(poolall)
nms
j="0h_rep1"
paste("/wynton/scratch/lcalviel/sujatha/results/SaTann/pool_",j,"_for_SaTAnn",sep = "")
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_final_SaTAnn_results",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
fls
annota<-"/bfd/shared/annotations/human/gencode25/annotation_SaTAnn_RiboseQC/gencode.v25.annotation.gtf_Rannot"
nms<-gsub(basename(fls),pattern = "_final_SaTAnn_results",replacement = "")
nms2<-paste(gsub(fls,pattern = "_final_SaTAnn_results",replacement = ""),"_for_SaTAnn",sep = "")
nms2
for(i in 1:length(fls)){
plot_SaTAnn_results(for_SaTAnn_file = nms2[i],SaTAnn_output_file = fls[i],
annotation_file = annota,prefix = nms[i])
}
load("/bfd/lcalviel/data/sujatha/SaTAnn/new/pool_0h_final_SaTAnn_results_plots/pool_0h_SaTAnn_plots_RData")
names(list_SaTAnn_plots)
list_SaTAnn_plots[["ORFs_found"]]
as_ggplot(list_SaTAnn_plots[["ORFs_found"]])
library(SaTAnn)
library(knitr)
library(DT)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(ggpubr)
library(viridis)
as_ggplot
as_ggplot(list_SaTAnn_plots[["ORFs_found"]])
as_ggplot(list_SaTAnn_plots[["ORFs_found"]])
print(list_SaTAnn_plots[["ORFs_found"]])
names(list_SaTAnn_plots)
print(list_SaTAnn_plots[["ORFs_found_pct_tr"]])
print(list_SaTAnn_plots[["ORFs_found_P_sites_pNpM"]])
print(list_SaTAnn_plots[["ORFs_found_len"]])
print(list_SaTAnn_plots[["ORFs_genes"]])
print(list_SaTAnn_plots[["ORFs_genes_tpm"]])
print(list_SaTAnn_plots[["ORFs_maxiso]])
print(list_SaTAnn_plots[["ORFs_maxiso"]])
print(list_SaTAnn_plots[["Sel_txs_genes"]])
print(list_SaTAnn_plots[["Sel_txs_genes_tpm"]])
print(list_SaTAnn_plots[["Sel_txs_bins_juns"]])
print(list_SaTAnn_plots[["ORFs_genes"]])
print(list_SaTAnn_plots[["ORFs_genes_tpm"]])
remove.packages("SaTAnn")
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_final_SaTAnn_results",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
annota<-"/bfd/shared/annotations/human/gencode25/annotation_SaTAnn_RiboseQC/gencode.v25.annotation.gtf_Rannot"
nms<-gsub(basename(fls),pattern = "_final_SaTAnn_results",replacement = "")
nms2<-paste(gsub(fls,pattern = "_final_SaTAnn_results",replacement = ""),"_for_SaTAnn",sep = "")
for(i in 1:length(fls)){
plot_SaTAnn_results(for_SaTAnn_file = nms2[i],SaTAnn_output_file = fls[i],
annotation_file = annota,prefix = nms[i])
}
split
run_SaTAnn(for_SaTAnn_file = "/bfd/lcalviel//data/riboseq//DDX3_markus//results/RP_siDDX3_rep1/starmapp_25_RP_siDDX3_rep1/RP_siDDX3_rep1_Aligned.sortedByCoord.out.bam_to_SaTAnn",
annotation_file = "/bfd/shared/annotations/human/gencode25/Ribo_seQC/gencode.v25.annotation.gtf_Rannot",n_cores = 2,gene_name = c("FBXO5","MDH1","DDX3X","ST7","IFRD1"))
run_SaTAnn(for_SaTAnn_file = "/bfd/lcalviel//data/riboseq//DDX3_markus//results/RP_siDDX3_rep1/starmapp_25_RP_siDDX3_rep1/RP_siDDX3_rep1_Aligned.sortedByCoord.out.bam_to_SaTAnn",
annotation_file = "/bfd/shared/annotations/human/gencode25/Ribo_seQC/gencode.v25.annotation.gtf_Rannot",n_cores = 2,gene_name = c("FBXO5","MDH1","DDX3X","ST7","IFRD1"))
sessionInfo()
remove.packages("SaTAnn")
remove.packages("SaTAnn")
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_final_SaTAnn_results",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
annota<-"/bfd/shared/annotations/human/gencode25/annotation_SaTAnn_RiboseQC/gencode.v25.annotation.gtf_Rannot"
nms<-gsub(basename(fls),pattern = "_final_SaTAnn_results",replacement = "")
nms2<-paste(gsub(fls,pattern = "_final_SaTAnn_results",replacement = ""),"_for_SaTAnn",sep = "")
for(i in 1:length(fls)){
plot_SaTAnn_results(for_SaTAnn_file = nms2[i],SaTAnn_output_file = fls[i],
annotation_file = annota,prefix = nms[i])
}
nms
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_SaTAnn_plots_RData",all.files = T,full.names = T,recursive = T)
fls
nms<-gsub(basename(fls),pattern = "_SaTAnn_plots_RData",replacement = "")
nms
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_final_SaTAnn_results",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
annota<-"/bfd/shared/annotations/human/gencode25/annotation_SaTAnn_RiboseQC/gencode.v25.annotation.gtf_Rannot"
nms<-gsub(basename(fls),pattern = "_final_SaTAnn_results",replacement = "")
nms2<-paste(gsub(fls,pattern = "_final_SaTAnn_results",replacement = ""),"_for_SaTAnn",sep = "")
for(i in 1:length(fls)){
plot_SaTAnn_results(for_SaTAnn_file = nms2[i],SaTAnn_output_file = fls[i],
annotation_file = annota,prefix = nms[i])
}
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_SaTAnn_plots_RData",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
nms<-gsub(basename(fls),pattern = "_SaTAnn_plots_RData",replacement = "")
date()
#611
nms
fls_rep<-fls[grep(fls,pattern = "rep")]
fls_rep
nms_rep<-gsub(basename(fls_rep),pattern = "_SaTAnn_plots_RData",replacement = "")
create_SaTAnn_html_report(input_files = fls_rep,input_sample_names = nms_rep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja_reps.html")
sessioninfo()
sessionInfo()
sessionInfo()
sessionInfo
sessionInfo()
session_info()
create_SaTAnn_html_report
render
knitr::render
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_SaTAnn_plots_RData",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
nms<-gsub(basename(fls),pattern = "_SaTAnn_plots_RData",replacement = "")
fls_rep<-fls[grep(fls,pattern = "rep")]
nms_rep<-gsub(basename(fls_rep),pattern = "_SaTAnn_plots_RData",replacement = "")
fls_rep
nms_rep
create_SaTAnn_html_report(input_files = fls_rep,input_sample_names = nms_rep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja_reps.html")
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_SaTAnn_plots_RData",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
nms<-gsub(basename(fls),pattern = "_SaTAnn_plots_RData",replacement = "")
fls_rep<-fls[grep(fls,pattern = "rep")]
nms_rep<-gsub(basename(fls_rep),pattern = "_SaTAnn_plots_RData",replacement = "")
fls_rep
create_SaTAnn_html_report(input_files = fls_rep,input_sample_names = nms_rep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja_reps.html")
fls_norep<-fls[grep(fls,pattern = "rep",invert=T)]
nms_norep<-gsub(basename(fls_norep),pattern = "_SaTAnn_plots_RData",replacement = "")
create_SaTAnn_html_report(input_files = fls_norep,input_sample_names = nms_norep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja.html")
create_SaTAnn_html_report
library(SaTAnn)
create_SaTAnn_html_report
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_SaTAnn_plots_RData",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
nms<-gsub(basename(fls),pattern = "_SaTAnn_plots_RData",replacement = "")
fls_rep<-fls[grep(fls,pattern = "rep")]
nms_rep<-gsub(basename(fls_rep),pattern = "_SaTAnn_plots_RData",replacement = "")
create_SaTAnn_html_report(input_files = fls_rep,input_sample_names = nms_rep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja_reps.html")
fls_norep<-fls[grep(fls,pattern = "rep",invert=T)]
nms_norep<-gsub(basename(fls_norep),pattern = "_SaTAnn_plots_RData",replacement = "")
create_SaTAnn_html_report(input_files = fls_norep,input_sample_names = nms_norep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja.html")
library(SaTAnn)
library(SaTAnn)
fls<-list.files(path = "/bfd/lcalviel/data/sujatha/SaTAnn/new",pattern = "_SaTAnn_plots_RData",all.files = T,full.names = T,recursive = T)
fls<-fls[c(17,1:4,9:12,13:16,5:8)]
nms<-gsub(basename(fls),pattern = "_SaTAnn_plots_RData",replacement = "")
fls_rep<-fls[grep(fls,pattern = "rep")]
nms_rep<-gsub(basename(fls_rep),pattern = "_SaTAnn_plots_RData",replacement = "")
create_SaTAnn_html_report(input_files = fls_rep,input_sample_names = nms_rep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja_reps.html")
fls_norep<-fls[grep(fls,pattern = "rep",invert=T)]
nms_norep<-gsub(basename(fls_norep),pattern = "_SaTAnn_plots_RData",replacement = "")
create_SaTAnn_html_report(input_files = fls_norep,input_sample_names = nms_norep, output_file = "/bfd/lcalviel/data/sujatha/SaTAnn/new/SaTAnn_results_toSuja.html")
suppressPackageStartupMessages(library("SaTAnn"))
load("/bfd/lcalviel/data/SaTAnn/new_wynt_fromfastq/results/HEK293_Aligned.sortedByCoord.out.bam_for_SaTAnn")
load("/bfd/lcalviel/data/SaTAnn/new_wynt_fromfastq/results/HEK293_final_SaTAnn_results")
SaTAnn_results$ORFs_tx
ress<-SaTAnn_results$ORFs_tx$
ress<-SaTAnn_results$ORFs_tx
ress$region
seqnames(ress$region)
ress<-ress[seqnames(ress$region)=="chr22"]
ress
table(ress$gene_name)
ress[ress$gene_name=="MIEF1"]
?prepare_for_SaTAnn
names(SaTAnn_results)
?run_SaTAnn
?SaTAnn
SaTAnn_results$ORFs_gen
SaTAnn_results$ORFs_tx
SaTAnn_results$ORFs_spl_feat_longest
SaTAnn_results$ORFs_tx
SaTAnn_results$selected_txs
SaTAnn_results$ORFs_spl_feat_maxORF
SaTAnn_results$ORFs_tx
?run_SaTAnn
?SaTAnn
run_SaTAnn
?run_SaTAnn
?run_SaTAnn
remove.packages("SaTAnn")
library(devtools)
remove.packages("SaTAnn")
load("/bfd/lcalviel/data/SaTAnn/new_wynt_fromfastq/results/HEK293_final_SaTAnn_results")
ress<-SaTAnn_results$ORFs_tx
ress<-ress[seqnames(ress$region)=="chr22"]
table(ress$gene_name)
remove.packages("SaTAnn")
library(devtools)
setwd("/bfd/lcalviel/SaTAnn/with_plotting/with_report/")
system("rm -r SaTAnn")
descrip<-list("Name"="SaTAnn","Title"="Splice-Aware Translatome Annotation","Authors@R"='c(person("Lorenzo", "Calviello", email = "calviello.l.bio@gmail.com", role = c("aut","cre")),
person("Uwe", "Ohler", email = "Uwe.Ohler@mdc-berlin.de", role = c("rev","fnd")))',
"Depends"= c("rtracklayer","BSgenome","devtools","Biostrings","GenomicFeatures","foreach","doMC","multitaper","GenomicAlignments","GenomicFiles","reshape2","ggplot2","cowplot","grid","BiocGenerics","knitr","gridExtra","rmarkdown"),
"Description"= "SaTAnn is a method that quantifies translation at the single ORF level using Ribo-seq data.",
"LazyData"="FALSE","License"="GPL-3 or above","biocViews"=c("RiboSeq", "GenomeAnnotation", "Transcriptomics", "Software"),
"Version"="0.99.0")
create("SaTAnn",description = descrip)
system("cp satann.R SaTAnn/R/")
setwd("SaTAnn")
system("mkdir -p inst/rmd")
system("cp /bfd/lcalviel/SaTAnn/with_plotting/with_report/SaTAnn_template.Rmd inst/rmd/")
document()
write("import(Biostrings)\nimport(GenomicAlignments)\nimport(GenomicFiles)\nimport(devtools)\nimport(rtracklayer)\nimport(BSgenome)\nimport(BiocGenerics)\nimport(foreach)\nimport(doMC)\nimport(multitaper)\nimport(reshape2)\nimport(ggplot2)\nimport(cowplot)\nimport(grid)\nimport(knitr)\nimport(gridExtra)\nimport(rmarkdown)\nimport(GenomicFeatures)",file =   "/bfd/lcalviel/SaTAnn/with_plotting/with_report/SaTAnn/NAMESPACE",append = T)
install(upgrade = F)
build()
